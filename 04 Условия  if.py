#  04 Условия  if
""""""


"""   T A S K S   """


# Task 04
"""
«Високосный год»
Дано натуральное число. Требуется определить, является ли год с данным номером високосным. 
Если год является високосным, то выведите YES, иначе выведите NO. 
В соответствии с григорианским календарем, год является високосным, 
если его номер кратен 4, но не кратен 100, а также если он кратен 400.
"""
year = int(input())

if not year % 100:
    if not year % 400:
        print('YES')
    else:
        print('NO')
else:
    print(('YES', 'NO')[bool(year % 4)])


# Короче
if (not year % 4 and year % 100) or not year % 400:
    print('YES')
else:
    print('NO')


# Task 05
"""
«Существует ли треугольник»
Даны три натуральных числа a,b,c, записанные в отдельных строках. 
Определите, существует ли невырожденный треугольник с такими сторонами. 
Если треугольник существует, выведите строку YES, иначе выведите строку NO.
"""
from sys import stdin

a, b, c = sorted(map(int, stdin))

print(('YES', 'NO')[c > a + b])

# if c > a + b:
#     print('YES')
# else:
#     print('NO')


# Вариант
a, b, c = map(int, stdin)
if (a + b > c) and (a + c > b) and (b + c > a):
    print('YES')
else:
    print('NO')


# Task 06
"""
«Сколько совпадает чисел»
Даны три целых числа. Определите, сколько среди них совпадающих. 
Программа должна вывести одно из чисел: 3 (если все совпадают), 
2 (если два совпадает) или 0 (если все числа различны).
"""
from sys import stdin

a, b, c = map(int, stdin)

if a == b == c:
    print(3)
elif any((a == b, b == c, c == a)):
    print(2)
else:
    print(0)

# Оригинальное решение
from sys import stdin
a, b, c = map(int, stdin)
print('_320'[len(set((a, b, c)))])


# Task 07
"""
«Шахматная доска»
Заданы две клетки шахматной доски. Если они покрашены в один цвет, 
то выведите слово YES, а если в разные цвета — то NO. 
Программа получает на вход четыре числа от 1 до 8 каждое, 
задающие номер столбца и номер строки сначала для первой клетки, потом для второй клетки.
"""
# Ключ: Сумма координат черных клеток - четное число. Для белых - нечетное число.
from sys import stdin
x1, y1, x2, y2 = map(int, stdin)

if (x1 + y1) % 2 == (x2 + y2) % 2:
    print('YES')
else:
    print('NO')


# Task 08
"""
«Ход ладьи»
Шахматная ладья ходит по горизонтали или вертикали. 
Даны две различные клетки шахматной доски,
определите, может ли ладья попасть с первой клетки на вторую одним ходом. 
.
"""
from sys import stdin
x1, y1, x2, y2 = map(int, stdin)

if x1 == x2 or y1 == y2:
    print('YES')
else:
    print('NO')


# Task 09
"""
«Ход короля»
Шахматный король ходит по горизонтали, вертикали и диагонали, но только на 1 клетку. 
Даны две различные клетки шахматной доски, определите, 
может ли король попасть с первой клетки на вторую одним ходом. 
"""
from sys import stdin
x1, y1, x2, y2 = map(int, stdin)

if abs(x1 - x2) <= 1 and abs(y1 - y2) <= 1:
    print('YES')
else:
    print('NO')


# Task 10
"""
«Ход слона»
Шахматный слон ходит по диагонали. Даны две различные клетки шахматной доски, 
определите, может ли слон попасть с первой клетки на вторую одним ходом.
"""
from sys import stdin
x1, y1, x2, y2 = map(int, stdin)

if abs(x1 - x2) == abs(y1 - y2):
    print('YES')
else:
    print('NO')


# Task 11
"""
«Ход ферзя»
Шахматный ферзь ходит по диагонали, горизонтали или вертикали. 
Даны две различные клетки шахматной доски, определите, 
может ли ферзь попасть с первой клетки на вторую одним ходом.
"""
from sys import stdin
x1, y1, x2, y2 = map(int, stdin)

if abs(x1 - x2) == abs(y1 - y2) or x1 == x2 or y1 == y2:
    print('YES')
else:
    print('NO')


# Task 12
"""
«Ход коня»
Шахматный конь ходит буквой “Г” — на две клетки по вертикали в любом направлении 
и на одну клетку по горизонтали, или наоборот. 
Даны две различные клетки шахматной доски, 
определите, может ли конь попасть с первой клетки на вторую одним ходом.
"""
from sys import stdin
x1, y1, x2, y2 = map(int, stdin)

dx = abs(x1 - x2)
dy = abs(y1 - y2)

# if abs(x1 - x2) == 2 and abs(y1 - y2) == 1 or abs(x1 - x2) == 1 and abs(y1 - y2) == 2:
if dx == 2 and dy == 1 or dx == 1 and dy == 2:
    print('YES')
else:
    print('NO')


# Task 13
"""
«Шоколадка»
Шоколадка имеет вид прямоугольника, разделенного на n×m долек. 
Шоколадку можно один раз разломить по прямой на две части. 
Определите, можно ли таким образом отломить от шоколадки часть, состоящую ровно из k долек. 
Программа получает на вход три числа: n, m, k  и должна вывести YES или NO.
"""
from sys import stdin
n, m, k = map(int, stdin)

if k <= m * n and not (k % n or not k % m):
    print('YES')
else:
    print('NO')


# Task 14
"""
«Яша плавает в бассейне»
Яша плавал в бассейне размером N×M метров и устал. В этот момент он обнаружил, 
что находится на расстоянии x метров от одного из длинных бортиков (не обязательно от ближайшего) 
и y метров от одного из коротких бортиков. 
Какое минимальное расстояние должен проплыть Яша, чтобы выбраться из бассейна на бортик? 
Программа получает на вход числа N, M, x, y. 
Вывести число метров, которое нужно проплыть Яше до бортика.
* Разрешается использовать функцию min()
"""
from sys import stdin

n, m, x, y = map(int, stdin)

if n < m:
    n, m = m, n
print(min(m - x, n - y, x, y))


# Вариант
from sys import stdin
n, m, x, y = map(int, stdin)

if n > m:
    print(min(m - x, n - y, x, y))
else:
    print(min(n - x, m - y, x, y))


# Task 15
"""
«Коровы»
Дано число (n<100). Вывести введенное число n и одно из слов (на латинице): k
orov, korovaили korovy, например, 1 korova, 2 korovy, 5 korov. 
Между числом и словом должен стоять ровно один пробел.
"""
n = int(input())

if n < 10 or n >= 20:
    if n % 10 == 1:
        print(f'{n} korova')
    elif 2 <= n % 10 <= 4:
        print(f'{n} korovy')
    else:
        print(f'{n} korov')
elif 10 <= n <= 19:
    print(f'{n} korov')

# Короче (+ работает для  > 100)
if n % 10 == 1 and n % 100 != 11:
    print(f'{n} korova')
elif 2 <= n % 10 <= 4 and (n % 100 < 10 or n % 100 >= 20):
    print(f'{n} korovy')
else:
    print(f'{n} korov')


# Task 16
"""
«Котлеты»
На сковородку одновременно можно положить k котлет. 
Каждую котлету нужно с каждой стороны обжаривать m минут непрерывно. 
За какое наименьшее время удастся поджарить с обеих сторон n котлет? 
Вводятся 3 числа: 
k, m и n (каждое с новой строки). 
Вывести наименьшее время, за которое все котлеты будут обжарены.

Рассмотрим следующий формат k, m, n = 2, 3, 7:
Обжарим 6 котлет с одной стороны (3 жарки), далее 7 котлету положим с какой-то, которую мы уже жарили, 
но перевернув это котлету другой стороной. 
Итого у нас будет 4 жарки и после этого останется еще 6 не обжаренных сторон, 
которые обжарятся за 3 жарки (так как можем класть по 2 котлеты за раз). 
Итого уйдет 21 минута.
Ключевым является идея того, что нужно считать количество обжарок сторон котлет. 
"""
from sys import stdin
k, m, n = map(int, stdin)

if n <= k:
    print(2 * m)
elif (2 * n) % k == 0:
    print(m * (2 * n // k))
else:
    print(m * (2 * n // k + 1))


