#  03 Ввод-вывод данных
""""""


"""   T A S K S   """


# Task 15
"""
«Турнир»
В однокруговом турнире без ничьих участвовало N команд (каждая сыграла с каждой по одному матчу). 
Победителями считаются все команды, которые выиграли не меньше партий, чем остальные. 
Какое наибольшее количество победителей может быть в таком турнире? 

Вводится одно натуральное число — количество команд. 
Выведите одно число — наибольшее возможное количество победителей в таком турнире. 
"""
n = int(input())

# всего состоится игр
game = (n ** 2 - n) // 2

# Если число команд четное, то на одну меньше. Если нечетное, то все.
print(n - (n - 1) % 2)


# Task 16
"""
«Детали»
Имеется N кг металлического сплава. Из него изготавливают заготовки массой K кг каждая. 
После этого из каждой заготовки вытачиваются детали массой M кг каждая 
(из каждой заготовки вытачивают максимально возможное количество деталей). 
Если от заготовок после этого что-то остается, 
то этот материал возвращают к началу производственного цикла и сплавляют с тем, 
что осталось при изготовлении заготовок. 
Если того сплава, который получился, достаточно для изготовления хотя бы одной заготовки, 
то из него снова изготавливают заготовки, из них —  детали и т.д.

Какое количество деталей может быть получено по этой технологии из имеющихся исходно N кг сплава.
"""
n, k, m = (int(input())for _ in range(3))
res = 0

while n >= k >= m:  # пока можно отлить заготовку + заготовка >= детали
    n -= k
    res += k // m
    n += k % m
print(res)

# Вариант
n, k, m = (int(input())for _ in range(3))
details, remainder = divmod(k, m)  # divmod(x, y)  - return the tuple (x // y, x % y)
res = 0
while n // k:  # пока можно отлить заготовку
    blank, n = divmod(n, k)
    res += details * blank
    n += remainder * blank
print(res)


# Решение автора. Непонятное
n, k, m = (int(input())for _ in range(3))

# расход сплава на детали из одной заготовки
stage = k - k % m
n = n - k
print((n // stage + 1) * (k // m))


# n, k, m = 10, 5, 2  # 4
# n, k, m = 13, 5, 3  # 3

